#!/usr/bin/env bash

quality=100
if (echo "$1" | grep --quiet '^[0-9]\+$'); then
  quality="$1"
  shift
fi

if test $# -eq 0; then
  echo "Usage: $(basename "$0") [MAX_QUALITY] FILES..."
  exit 1
fi

echo "Using $quality% quality."

log=''

for file in "$@"; do
  sizeBefore="$(du -b "$file" | cut -f 1)"
  sizeBeforeHuman="$(du -bh "$file" | cut -f 1)"
  unknown=0

  echo "### Optimizing: $file"
  case "$file" in
    *.png)
      optipng -strip all -o7 "$file"
      ;;
    *.jpg|*.jpeg)
      num="$(echo "$file" | grep -m 1 -o '\.[0-9]\+\.')"
      if test -n "$num"; then
        fileQuality="${num:1:-1}"
        echo "Using file-specific $fileQuality% max quality."
      else
        fileQuality="$quality"
      fi
      jpegoptim --strip-all --max="$fileQuality" "$file"
      ;;
    *.svg)
      svgo --config="$HOME/.svgo.yml" "$file"
      ;;
    *)
      unknown=1
  esac

  if test "$unknown" -eq 0; then
    sizeAfter="$(du -b "$file" | cut -f 1)"
    sizeAfterHuman="$(du -bh "$file" | cut -f 1)"
    percentage="$((100 * (sizeBefore - sizeAfter) / sizeBefore))"
    change="$(echo "-$percentage%" | sed 's/^--/+/')"
    log+="$file|$sizeBeforeHuman â†’ $sizeAfterHuman|$change\n"
  else
    log+="$file|Unsupported file extension\n"
  fi
done

echo "### Results:"
echo -e "${log::-2}" | column -t -s '|'
